/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-11-17 18:43:33 UTC)
 * on 2014-11-23 at 20:28:21 UTC 
 * Modify at your own risk.
 */

package com.appspot.umichseed.seed;

/**
 * Service definition for Seed (v0.5.1).
 *
 * <p>
 * A test for passing data through the API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SeedRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Seed extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.0 of the seed library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://umichseed.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "seed/v0.5.1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Seed(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Seed(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Alerts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.Alerts.List request = seed.alerts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Alerts alerts() {
    return new Alerts();
  }

  /**
   * The "alerts" collection of methods.
   */
  public class Alerts {

    /**
     * Exposes an API endpoint to get alerts associated with a user Args: request: An instance of
     * AlertsRequest parsed from the API request. Returns: An AlertListResponse message, for a patients
     * contains all of their emergency alerts, for a doctor contains all of their patient's alerts (all
     * within a time range)
     *
     * Create a request for the method "alerts.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesAlertsRequest}
     * @return the request
     */
    public Get get(com.appspot.umichseed.seed.model.MessagesAlertsRequest content) throws java.io.IOException {
      Get result = new Get(content);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesAlertListResponse> {

      private static final String REST_PATH = "alerts";

      /**
       * Exposes an API endpoint to get alerts associated with a user Args: request: An instance of
       * AlertsRequest parsed from the API request. Returns: An AlertListResponse message, for a
       * patients contains all of their emergency alerts, for a doctor contains all of their patient's
       * alerts (all within a time range)
       *
       * Create a request for the method "alerts.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesAlertsRequest}
       * @since 1.13
       */
      protected Get(com.appspot.umichseed.seed.model.MessagesAlertsRequest content) {
        super(Seed.this, "POST", REST_PATH, content, com.appspot.umichseed.seed.model.MessagesAlertListResponse.class);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Doctor collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.Doctor.List request = seed.doctor().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Doctor doctor() {
    return new Doctor();
  }

  /**
   * The "doctor" collection of methods.
   */
  public class Doctor {

    /**
     * Exposes an API endpoint to query a doctor based on key (email) Args: request: An instance of
     * EmailRequest parsed from the API request. Returns: An instance of DoctorPut containing all doctor
     * info
     *
     * Create a request for the method "doctor.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public Get get(java.lang.String email) throws java.io.IOException {
      Get result = new Get(email);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesDoctorPut> {

      private static final String REST_PATH = "doctor";

      /**
       * Exposes an API endpoint to query a doctor based on key (email) Args: request: An instance of
       * EmailRequest parsed from the API request. Returns: An instance of DoctorPut containing all
       * doctor info
       *
       * Create a request for the method "doctor.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected Get(java.lang.String email) {
        super(Seed.this, "GET", REST_PATH, null, com.appspot.umichseed.seed.model.MessagesDoctorPut.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Get setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Exposes an API endpoint to insert a doctor Args: request: An instance of DoctorPut parsed from
     * the API request. Returns: Nothing
     *
     * Create a request for the method "doctor.put".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Put#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesDoctorPut}
     * @return the request
     */
    public Put put(com.appspot.umichseed.seed.model.MessagesDoctorPut content) throws java.io.IOException {
      Put result = new Put(content);
      initialize(result);
      return result;
    }

    public class Put extends SeedRequest<Void> {

      private static final String REST_PATH = "doctor";

      /**
       * Exposes an API endpoint to insert a doctor Args: request: An instance of DoctorPut parsed from
       * the API request. Returns: Nothing
       *
       * Create a request for the method "doctor.put".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Put#execute()} method to invoke the remote operation. <p> {@link
       * Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesDoctorPut}
       * @since 1.13
       */
      protected Put(com.appspot.umichseed.seed.model.MessagesDoctorPut content) {
        super(Seed.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Put setAlt(java.lang.String alt) {
        return (Put) super.setAlt(alt);
      }

      @Override
      public Put setFields(java.lang.String fields) {
        return (Put) super.setFields(fields);
      }

      @Override
      public Put setKey(java.lang.String key) {
        return (Put) super.setKey(key);
      }

      @Override
      public Put setOauthToken(java.lang.String oauthToken) {
        return (Put) super.setOauthToken(oauthToken);
      }

      @Override
      public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Put) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Put setQuotaUser(java.lang.String quotaUser) {
        return (Put) super.setQuotaUser(quotaUser);
      }

      @Override
      public Put setUserIp(java.lang.String userIp) {
        return (Put) super.setUserIp(userIp);
      }

      @Override
      public Put set(String parameterName, Object value) {
        return (Put) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the DoctorsPatients collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.DoctorsPatients.List request = seed.doctorsPatients().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public DoctorsPatients doctorsPatients() {
    return new DoctorsPatients();
  }

  /**
   * The "doctors_patients" collection of methods.
   */
  public class DoctorsPatients {

    /**
     * Exposes an API endpoint to query all a doctors patients based on the doctor's key (email) Args:
     * request: An instance of EmailRequest parsed from the API request. Returns: An instance of
     * PatientListResponse containing all doctor info
     *
     * Create a request for the method "doctors_patients.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesEmailRequest}
     * @return the request
     */
    public Get get(com.appspot.umichseed.seed.model.MessagesEmailRequest content) throws java.io.IOException {
      Get result = new Get(content);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesPatientListResponse> {

      private static final String REST_PATH = "doctors_patients";

      /**
       * Exposes an API endpoint to query all a doctors patients based on the doctor's key (email) Args:
       * request: An instance of EmailRequest parsed from the API request. Returns: An instance of
       * PatientListResponse containing all doctor info
       *
       * Create a request for the method "doctors_patients.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesEmailRequest}
       * @since 1.13
       */
      protected Get(com.appspot.umichseed.seed.model.MessagesEmailRequest content) {
        super(Seed.this, "POST", REST_PATH, content, com.appspot.umichseed.seed.model.MessagesPatientListResponse.class);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the GcmCreds collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.GcmCreds.List request = seed.gcmCreds().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public GcmCreds gcmCreds() {
    return new GcmCreds();
  }

  /**
   * The "gcm_creds" collection of methods.
   */
  public class GcmCreds {

    /**
     * Exposes an API endpoint to insert a GCM email/token pair Args: request: An instance of
     * GcmCredsPut parsed from the API request. Returns: Nothing
     *
     * Create a request for the method "gcm_creds.put".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Put#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesGcmCredsPut}
     * @return the request
     */
    public Put put(com.appspot.umichseed.seed.model.MessagesGcmCredsPut content) throws java.io.IOException {
      Put result = new Put(content);
      initialize(result);
      return result;
    }

    public class Put extends SeedRequest<Void> {

      private static final String REST_PATH = "gcm_creds";

      /**
       * Exposes an API endpoint to insert a GCM email/token pair Args: request: An instance of
       * GcmCredsPut parsed from the API request. Returns: Nothing
       *
       * Create a request for the method "gcm_creds.put".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Put#execute()} method to invoke the remote operation. <p> {@link
       * Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesGcmCredsPut}
       * @since 1.13
       */
      protected Put(com.appspot.umichseed.seed.model.MessagesGcmCredsPut content) {
        super(Seed.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Put setAlt(java.lang.String alt) {
        return (Put) super.setAlt(alt);
      }

      @Override
      public Put setFields(java.lang.String fields) {
        return (Put) super.setFields(fields);
      }

      @Override
      public Put setKey(java.lang.String key) {
        return (Put) super.setKey(key);
      }

      @Override
      public Put setOauthToken(java.lang.String oauthToken) {
        return (Put) super.setOauthToken(oauthToken);
      }

      @Override
      public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Put) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Put setQuotaUser(java.lang.String quotaUser) {
        return (Put) super.setQuotaUser(quotaUser);
      }

      @Override
      public Put setUserIp(java.lang.String userIp) {
        return (Put) super.setUserIp(userIp);
      }

      @Override
      public Put set(String parameterName, Object value) {
        return (Put) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Generate collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.Generate.List request = seed.generate().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Generate generate() {
    return new Generate();
  }

  /**
   * The "generate" collection of methods.
   */
  public class Generate {

    /**
     * Exposes an API endpoint to generate a random data set for testing. Only run once. Data set
     * parameters adjustable in the backend
     *
     * Create a request for the method "generate.put".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Put#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Put put() throws java.io.IOException {
      Put result = new Put();
      initialize(result);
      return result;
    }

    public class Put extends SeedRequest<Void> {

      private static final String REST_PATH = "generate";

      /**
       * Exposes an API endpoint to generate a random data set for testing. Only run once. Data set
       * parameters adjustable in the backend
       *
       * Create a request for the method "generate.put".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Put#execute()} method to invoke the remote operation. <p> {@link
       * Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Put() {
        super(Seed.this, "POST", REST_PATH, null, Void.class);
      }

      @Override
      public Put setAlt(java.lang.String alt) {
        return (Put) super.setAlt(alt);
      }

      @Override
      public Put setFields(java.lang.String fields) {
        return (Put) super.setFields(fields);
      }

      @Override
      public Put setKey(java.lang.String key) {
        return (Put) super.setKey(key);
      }

      @Override
      public Put setOauthToken(java.lang.String oauthToken) {
        return (Put) super.setOauthToken(oauthToken);
      }

      @Override
      public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Put) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Put setQuotaUser(java.lang.String quotaUser) {
        return (Put) super.setQuotaUser(quotaUser);
      }

      @Override
      public Put setUserIp(java.lang.String userIp) {
        return (Put) super.setUserIp(userIp);
      }

      @Override
      public Put set(String parameterName, Object value) {
        return (Put) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the PManData collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.PManData.List request = seed.pManData().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PManData pManData() {
    return new PManData();
  }

  /**
   * The "p_man_data" collection of methods.
   */
  public class PManData {

    /**
     * Exposes an API endpoint for inserting qualitative patient data from the survey and manual quant
     * data (blood pressure and body temp) Args: request: An instance of PManDataPut parsed from the API
     * request. Returns: Nothing
     *
     * Create a request for the method "p_man_data.put".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Put#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesPManDataPut}
     * @return the request
     */
    public Put put(com.appspot.umichseed.seed.model.MessagesPManDataPut content) throws java.io.IOException {
      Put result = new Put(content);
      initialize(result);
      return result;
    }

    public class Put extends SeedRequest<Void> {

      private static final String REST_PATH = "p_man_data_put";

      /**
       * Exposes an API endpoint for inserting qualitative patient data from the survey and manual quant
       * data (blood pressure and body temp) Args: request: An instance of PManDataPut parsed from the
       * API request. Returns: Nothing
       *
       * Create a request for the method "p_man_data.put".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Put#execute()} method to invoke the remote operation. <p> {@link
       * Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesPManDataPut}
       * @since 1.13
       */
      protected Put(com.appspot.umichseed.seed.model.MessagesPManDataPut content) {
        super(Seed.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Put setAlt(java.lang.String alt) {
        return (Put) super.setAlt(alt);
      }

      @Override
      public Put setFields(java.lang.String fields) {
        return (Put) super.setFields(fields);
      }

      @Override
      public Put setKey(java.lang.String key) {
        return (Put) super.setKey(key);
      }

      @Override
      public Put setOauthToken(java.lang.String oauthToken) {
        return (Put) super.setOauthToken(oauthToken);
      }

      @Override
      public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Put) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Put setQuotaUser(java.lang.String quotaUser) {
        return (Put) super.setQuotaUser(quotaUser);
      }

      @Override
      public Put setUserIp(java.lang.String userIp) {
        return (Put) super.setUserIp(userIp);
      }

      @Override
      public Put set(String parameterName, Object value) {
        return (Put) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the PQualData collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.PQualData.List request = seed.pQualData().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PQualData pQualData() {
    return new PQualData();
  }

  /**
   * The "p_qual_data" collection of methods.
   */
  public class PQualData {

    /**
     * Exposes an API endpoint to get qualitative patient data based on a time range Args: request: An
     * instance of PQualDataRequest parsed from the API request. Returns: An instance of the
     * PQualDataListResponse containing the requested patient survey responses within the requested time
     * range (inclusive)
     *
     * Create a request for the method "p_qual_data.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesPQualDataRequest}
     * @return the request
     */
    public Get get(com.appspot.umichseed.seed.model.MessagesPQualDataRequest content) throws java.io.IOException {
      Get result = new Get(content);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesPQualDataListResponse> {

      private static final String REST_PATH = "p_qual_data_get";

      /**
       * Exposes an API endpoint to get qualitative patient data based on a time range Args: request: An
       * instance of PQualDataRequest parsed from the API request. Returns: An instance of the
       * PQualDataListResponse containing the requested patient survey responses within the requested
       * time range (inclusive)
       *
       * Create a request for the method "p_qual_data.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesPQualDataRequest}
       * @since 1.13
       */
      protected Get(com.appspot.umichseed.seed.model.MessagesPQualDataRequest content) {
        super(Seed.this, "POST", REST_PATH, content, com.appspot.umichseed.seed.model.MessagesPQualDataListResponse.class);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the PQuantData collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.PQuantData.List request = seed.pQuantData().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PQuantData pQuantData() {
    return new PQuantData();
  }

  /**
   * The "p_quant_data" collection of methods.
   */
  public class PQuantData {

    /**
     * Exposes an API endpoint to get quantitative patient data based on a time range Args: request: An
     * instance of PQuantDataRequest parsed from the API request. Returns: An instance of the
     * PQuantDataListResponse containing the requested patient data within the requested time range
     * (inclusive)
     *
     * Create a request for the method "p_quant_data.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesPQuantDataRequest}
     * @return the request
     */
    public Get get(com.appspot.umichseed.seed.model.MessagesPQuantDataRequest content) throws java.io.IOException {
      Get result = new Get(content);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesPQuantDataListResponse> {

      private static final String REST_PATH = "p_quant_data";

      /**
       * Exposes an API endpoint to get quantitative patient data based on a time range Args: request:
       * An instance of PQuantDataRequest parsed from the API request. Returns: An instance of the
       * PQuantDataListResponse containing the requested patient data within the requested time range
       * (inclusive)
       *
       * Create a request for the method "p_quant_data.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesPQuantDataRequest}
       * @since 1.13
       */
      protected Get(com.appspot.umichseed.seed.model.MessagesPQuantDataRequest content) {
        super(Seed.this, "POST", REST_PATH, content, com.appspot.umichseed.seed.model.MessagesPQuantDataListResponse.class);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Patient collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.Patient.List request = seed.patient().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Patient patient() {
    return new Patient();
  }

  /**
   * The "patient" collection of methods.
   */
  public class Patient {

    /**
     * Exposes an API endpoint to query a patient based on key (email) Args: request: An instance of
     * EmailRequest parsed from the API request. Returns: An instance of PatientPut containing all
     * patient info
     *
     * Create a request for the method "patient.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public Get get(java.lang.String email) throws java.io.IOException {
      Get result = new Get(email);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesPatientPut> {

      private static final String REST_PATH = "patient";

      /**
       * Exposes an API endpoint to query a patient based on key (email) Args: request: An instance of
       * EmailRequest parsed from the API request. Returns: An instance of PatientPut containing all
       * patient info
       *
       * Create a request for the method "patient.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected Get(java.lang.String email) {
        super(Seed.this, "GET", REST_PATH, null, com.appspot.umichseed.seed.model.MessagesPatientPut.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Get setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Exposes an API endpoint to insert a patient Args: request: An instance of PatientPut parsed from
     * the API request. Returns: An instance of the newly inserted patient (as a PatientPut)
     *
     * Create a request for the method "patient.put".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Put#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesPatientPut}
     * @return the request
     */
    public Put put(com.appspot.umichseed.seed.model.MessagesPatientPut content) throws java.io.IOException {
      Put result = new Put(content);
      initialize(result);
      return result;
    }

    public class Put extends SeedRequest<com.appspot.umichseed.seed.model.MessagesPatientPut> {

      private static final String REST_PATH = "patient";

      /**
       * Exposes an API endpoint to insert a patient Args: request: An instance of PatientPut parsed
       * from the API request. Returns: An instance of the newly inserted patient (as a PatientPut)
       *
       * Create a request for the method "patient.put".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Put#execute()} method to invoke the remote operation. <p> {@link
       * Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesPatientPut}
       * @since 1.13
       */
      protected Put(com.appspot.umichseed.seed.model.MessagesPatientPut content) {
        super(Seed.this, "POST", REST_PATH, content, com.appspot.umichseed.seed.model.MessagesPatientPut.class);
      }

      @Override
      public Put setAlt(java.lang.String alt) {
        return (Put) super.setAlt(alt);
      }

      @Override
      public Put setFields(java.lang.String fields) {
        return (Put) super.setFields(fields);
      }

      @Override
      public Put setKey(java.lang.String key) {
        return (Put) super.setKey(key);
      }

      @Override
      public Put setOauthToken(java.lang.String oauthToken) {
        return (Put) super.setOauthToken(oauthToken);
      }

      @Override
      public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Put) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Put setQuotaUser(java.lang.String quotaUser) {
        return (Put) super.setQuotaUser(quotaUser);
      }

      @Override
      public Put setUserIp(java.lang.String userIp) {
        return (Put) super.setUserIp(userIp);
      }

      @Override
      public Put set(String parameterName, Object value) {
        return (Put) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the PatientDiagnosis collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.PatientDiagnosis.List request = seed.patientDiagnosis().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PatientDiagnosis patientDiagnosis() {
    return new PatientDiagnosis();
  }

  /**
   * The "patient_diagnosis" collection of methods.
   */
  public class PatientDiagnosis {

    /**
     * Exposes an API endpoint to set a patients diagnosis (to be called by a doctor) Args: request: An
     * instance of PatientDiagnosisPut parsed from the API request. Returns: Nothing
     *
     * Create a request for the method "patient_diagnosis.put".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Put#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesPatientDiagnosisPut}
     * @return the request
     */
    public Put put(com.appspot.umichseed.seed.model.MessagesPatientDiagnosisPut content) throws java.io.IOException {
      Put result = new Put(content);
      initialize(result);
      return result;
    }

    public class Put extends SeedRequest<Void> {

      private static final String REST_PATH = "patient_diagnosis";

      /**
       * Exposes an API endpoint to set a patients diagnosis (to be called by a doctor) Args: request:
       * An instance of PatientDiagnosisPut parsed from the API request. Returns: Nothing
       *
       * Create a request for the method "patient_diagnosis.put".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Put#execute()} method to invoke the remote operation. <p> {@link
       * Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesPatientDiagnosisPut}
       * @since 1.13
       */
      protected Put(com.appspot.umichseed.seed.model.MessagesPatientDiagnosisPut content) {
        super(Seed.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Put setAlt(java.lang.String alt) {
        return (Put) super.setAlt(alt);
      }

      @Override
      public Put setFields(java.lang.String fields) {
        return (Put) super.setFields(fields);
      }

      @Override
      public Put setKey(java.lang.String key) {
        return (Put) super.setKey(key);
      }

      @Override
      public Put setOauthToken(java.lang.String oauthToken) {
        return (Put) super.setOauthToken(oauthToken);
      }

      @Override
      public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Put) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Put setQuotaUser(java.lang.String quotaUser) {
        return (Put) super.setQuotaUser(quotaUser);
      }

      @Override
      public Put setUserIp(java.lang.String userIp) {
        return (Put) super.setUserIp(userIp);
      }

      @Override
      public Put set(String parameterName, Object value) {
        return (Put) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the UserCheck collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.UserCheck.List request = seed.userCheck().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public UserCheck userCheck() {
    return new UserCheck();
  }

  /**
   * The "user_check" collection of methods.
   */
  public class UserCheck {

    /**
     * Exposes an API endpoint to check the type of user Args: request: An instance of EmailRequest
     * parsed from the API request. Returns: A UserCheckResponse object indicating what type of user the
     * email is (Doctor | Patient | None)
     *
     * Create a request for the method "user_check.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesEmailRequest}
     * @return the request
     */
    public Get get(com.appspot.umichseed.seed.model.MessagesEmailRequest content) throws java.io.IOException {
      Get result = new Get(content);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesUserCheckResponse> {

      private static final String REST_PATH = "user_check";

      /**
       * Exposes an API endpoint to check the type of user Args: request: An instance of EmailRequest
       * parsed from the API request. Returns: A UserCheckResponse object indicating what type of user
       * the email is (Doctor | Patient | None)
       *
       * Create a request for the method "user_check.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesEmailRequest}
       * @since 1.13
       */
      protected Get(com.appspot.umichseed.seed.model.MessagesEmailRequest content) {
        super(Seed.this, "POST", REST_PATH, content, com.appspot.umichseed.seed.model.MessagesUserCheckResponse.class);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the WatsonQuestion collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.WatsonQuestion.List request = seed.watsonQuestion().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public WatsonQuestion watsonQuestion() {
    return new WatsonQuestion();
  }

  /**
   * The "watson_question" collection of methods.
   */
  public class WatsonQuestion {

    /**
     * Exposes an API endpoint to insert a watson question/answer pair Args: request: An instance of
     * WatsonQuestionPut parsed from the API request. Returns: Nothing
     *
     * Create a request for the method "watson_question.put".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Put#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesWatsonQuestionPut}
     * @return the request
     */
    public Put put(com.appspot.umichseed.seed.model.MessagesWatsonQuestionPut content) throws java.io.IOException {
      Put result = new Put(content);
      initialize(result);
      return result;
    }

    public class Put extends SeedRequest<Void> {

      private static final String REST_PATH = "watson_question";

      /**
       * Exposes an API endpoint to insert a watson question/answer pair Args: request: An instance of
       * WatsonQuestionPut parsed from the API request. Returns: Nothing
       *
       * Create a request for the method "watson_question.put".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Put#execute()} method to invoke the remote operation. <p> {@link
       * Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesWatsonQuestionPut}
       * @since 1.13
       */
      protected Put(com.appspot.umichseed.seed.model.MessagesWatsonQuestionPut content) {
        super(Seed.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Put setAlt(java.lang.String alt) {
        return (Put) super.setAlt(alt);
      }

      @Override
      public Put setFields(java.lang.String fields) {
        return (Put) super.setFields(fields);
      }

      @Override
      public Put setKey(java.lang.String key) {
        return (Put) super.setKey(key);
      }

      @Override
      public Put setOauthToken(java.lang.String oauthToken) {
        return (Put) super.setOauthToken(oauthToken);
      }

      @Override
      public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Put) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Put setQuotaUser(java.lang.String quotaUser) {
        return (Put) super.setQuotaUser(quotaUser);
      }

      @Override
      public Put setUserIp(java.lang.String userIp) {
        return (Put) super.setUserIp(userIp);
      }

      @Override
      public Put set(String parameterName, Object value) {
        return (Put) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the WatsonRecentQuestions collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Seed seed = new Seed(...);}
   *   {@code Seed.WatsonRecentQuestions.List request = seed.watsonRecentQuestions().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public WatsonRecentQuestions watsonRecentQuestions() {
    return new WatsonRecentQuestions();
  }

  /**
   * The "watson_recent_questions" collection of methods.
   */
  public class WatsonRecentQuestions {

    /**
     * Exposes an API endpoint to query the n most recent questions patients have asked watson Args:
     * request: An instance of WatsonQuestionsRequest parsed from the API request. Returns: An list of
     * the n most recent questions (as a WatsonQuestionListResponse)
     *
     * Create a request for the method "watson_recent_questions.get".
     *
     * This request holds the parameters needed by the seed server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.umichseed.seed.model.MessagesWatsonQuestionsRequest}
     * @return the request
     */
    public Get get(com.appspot.umichseed.seed.model.MessagesWatsonQuestionsRequest content) throws java.io.IOException {
      Get result = new Get(content);
      initialize(result);
      return result;
    }

    public class Get extends SeedRequest<com.appspot.umichseed.seed.model.MessagesWatsonQuestionsListResponse> {

      private static final String REST_PATH = "watson_recent_questions";

      /**
       * Exposes an API endpoint to query the n most recent questions patients have asked watson Args:
       * request: An instance of WatsonQuestionsRequest parsed from the API request. Returns: An list of
       * the n most recent questions (as a WatsonQuestionListResponse)
       *
       * Create a request for the method "watson_recent_questions.get".
       *
       * This request holds the parameters needed by the the seed server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.umichseed.seed.model.MessagesWatsonQuestionsRequest}
       * @since 1.13
       */
      protected Get(com.appspot.umichseed.seed.model.MessagesWatsonQuestionsRequest content) {
        super(Seed.this, "POST", REST_PATH, content, com.appspot.umichseed.seed.model.MessagesWatsonQuestionsListResponse.class);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Seed}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Seed}. */
    @Override
    public Seed build() {
      return new Seed(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SeedRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSeedRequestInitializer(
        SeedRequestInitializer seedRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(seedRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
